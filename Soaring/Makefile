#############################################################################
# Makefile for building: Soaring
# Generated by qmake (2.01a) (Qt 4.8.4) on: ons okt 16 14:00:37 2013
# Project:  Soaring.pro
# Template: app
# Command: /usr/lib/i386-linux-gnu/qt4/bin/qmake -o Makefile Soaring.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I../Hämtningar/libspotify-12.1.51-Linux-i686-release/include -I. -I.
LINK          = g++
LFLAGS        = -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib/i386-linux-gnu /home/alecca/Hämtningar/libspotify-12.1.51-Linux-i686-release/lib -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/lib/i386-linux-gnu/qt4/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		mainwindow.cpp \
		spuri.cpp \
		spview.cpp \
		sptestview.cpp \
		spsourcemodel.cpp \
		spinternalview.cpp \
		sppage.cpp \
		sphomepage.cpp \
		soaring.cpp \
		spotify.cpp \
		playlistview.cpp \
		playlistpage.cpp moc_mainwindow.cpp \
		moc_spview.cpp \
		moc_sptestview.cpp \
		moc_spsourcemodel.cpp \
		moc_sppage.cpp \
		moc_sphomepage.cpp \
		moc_playlistpage.cpp
OBJECTS       = main.o \
		mainwindow.o \
		spuri.o \
		spview.o \
		sptestview.o \
		spsourcemodel.o \
		spinternalview.o \
		sppage.o \
		sphomepage.o \
		soaring.o \
		spotify.o \
		playlistview.o \
		playlistpage.o \
		moc_mainwindow.o \
		moc_spview.o \
		moc_sptestview.o \
		moc_spsourcemodel.o \
		moc_sppage.o \
		moc_sphomepage.o \
		moc_playlistpage.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		Soaring.pro
QMAKE_TARGET  = Soaring
DESTDIR       = 
TARGET        = Soaring

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_mainwindow.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: Soaring.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/i386-linux-gnu/libQtGui.prl \
		/usr/lib/i386-linux-gnu/libQtCore.prl
	$(QMAKE) -o Makefile Soaring.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_phonon.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/i386-linux-gnu/libQtGui.prl:
/usr/lib/i386-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile Soaring.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/Soaring1.0.0 || $(MKDIR) .tmp/Soaring1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/Soaring1.0.0/ && $(COPY_FILE) --parents mainwindow.h spuri.h spview.h soaring.h sptestview.h spsourcemodel.h spinternalview.h sppage.h sphomepage.h spotify.h playlistview.h playlistpage.h .tmp/Soaring1.0.0/ && $(COPY_FILE) --parents main.cpp mainwindow.cpp spuri.cpp spview.cpp sptestview.cpp spsourcemodel.cpp spinternalview.cpp sppage.cpp sphomepage.cpp soaring.cpp spotify.cpp playlistview.cpp playlistpage.cpp .tmp/Soaring1.0.0/ && $(COPY_FILE) --parents mainwindow.ui .tmp/Soaring1.0.0/ && (cd `dirname .tmp/Soaring1.0.0` && $(TAR) Soaring1.0.0.tar Soaring1.0.0 && $(COMPRESS) Soaring1.0.0.tar) && $(MOVE) `dirname .tmp/Soaring1.0.0`/Soaring1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/Soaring1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_mainwindow.cpp moc_spview.cpp moc_sptestview.cpp moc_spsourcemodel.cpp moc_sppage.cpp moc_sphomepage.cpp moc_playlistpage.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_mainwindow.cpp moc_spview.cpp moc_sptestview.cpp moc_spsourcemodel.cpp moc_sppage.cpp moc_sphomepage.cpp moc_playlistpage.cpp
moc_mainwindow.cpp: spuri.h \
		soaring.h \
		spview.h \
		sppage.h \
		spinternalview.h \
		sphomepage.h \
		mainwindow.h
	/usr/lib/i386-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) mainwindow.h -o moc_mainwindow.cpp

moc_spview.cpp: spuri.h \
		soaring.h \
		sppage.h \
		spview.h
	/usr/lib/i386-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) spview.h -o moc_spview.cpp

moc_sptestview.cpp: spview.h \
		spuri.h \
		soaring.h \
		sppage.h \
		sptestview.h
	/usr/lib/i386-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) sptestview.h -o moc_sptestview.cpp

moc_spsourcemodel.cpp: spsourcemodel.h
	/usr/lib/i386-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) spsourcemodel.h -o moc_spsourcemodel.cpp

moc_sppage.cpp: sppage.h
	/usr/lib/i386-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) sppage.h -o moc_sppage.cpp

moc_sphomepage.cpp: sppage.h \
		sphomepage.h
	/usr/lib/i386-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) sphomepage.h -o moc_sphomepage.cpp

moc_playlistpage.cpp: sppage.h \
		playlistpage.h
	/usr/lib/i386-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) playlistpage.h -o moc_playlistpage.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_mainwindow.h
compiler_uic_clean:
	-$(DEL_FILE) ui_mainwindow.h
ui_mainwindow.h: mainwindow.ui
	/usr/lib/i386-linux-gnu/qt4/bin/uic mainwindow.ui -o ui_mainwindow.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_uic_clean 

####### Compile

main.o: main.cpp mainwindow.h \
		spuri.h \
		soaring.h \
		spview.h \
		sppage.h \
		spinternalview.h \
		sphomepage.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

mainwindow.o: mainwindow.cpp mainwindow.h \
		spuri.h \
		soaring.h \
		spview.h \
		sppage.h \
		spinternalview.h \
		sphomepage.h \
		ui_mainwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mainwindow.o mainwindow.cpp

spuri.o: spuri.cpp spuri.h \
		soaring.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o spuri.o spuri.cpp

spview.o: spview.cpp spview.h \
		spuri.h \
		soaring.h \
		sppage.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o spview.o spview.cpp

sptestview.o: sptestview.cpp sptestview.h \
		spview.h \
		spuri.h \
		soaring.h \
		sppage.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o sptestview.o sptestview.cpp

spsourcemodel.o: spsourcemodel.cpp spsourcemodel.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o spsourcemodel.o spsourcemodel.cpp

spinternalview.o: spinternalview.cpp spinternalview.h \
		spview.h \
		spuri.h \
		soaring.h \
		sppage.h \
		sphomepage.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o spinternalview.o spinternalview.cpp

sppage.o: sppage.cpp sppage.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o sppage.o sppage.cpp

sphomepage.o: sphomepage.cpp sphomepage.h \
		sppage.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o sphomepage.o sphomepage.cpp

soaring.o: soaring.cpp soaring.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o soaring.o soaring.cpp

spotify.o: spotify.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o spotify.o spotify.cpp

playlistview.o: playlistview.cpp playlistview.h \
		spview.h \
		spuri.h \
		soaring.h \
		sppage.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o playlistview.o playlistview.cpp

playlistpage.o: playlistpage.cpp playlistpage.h \
		sppage.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o playlistpage.o playlistpage.cpp

moc_mainwindow.o: moc_mainwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mainwindow.o moc_mainwindow.cpp

moc_spview.o: moc_spview.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_spview.o moc_spview.cpp

moc_sptestview.o: moc_sptestview.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_sptestview.o moc_sptestview.cpp

moc_spsourcemodel.o: moc_spsourcemodel.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_spsourcemodel.o moc_spsourcemodel.cpp

moc_sppage.o: moc_sppage.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_sppage.o moc_sppage.cpp

moc_sphomepage.o: moc_sphomepage.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_sphomepage.o moc_sphomepage.cpp

moc_playlistpage.o: moc_playlistpage.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_playlistpage.o moc_playlistpage.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

